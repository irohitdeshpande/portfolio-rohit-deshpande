---
import type { HeroProps, ContactProps } from "@types";
type Props = HeroProps & { contact: ContactProps };

const { name, specialty, summary, contact } = Astro.props;
---

<section class="py-8 md:py-14 w-full">
  <div class="flex flex-col md:flex-row items-center justify-between gap-8 md:gap-16 max-w-screen-xl mx-auto">
    {/* Left: Text */}
    <div class="flex-1 flex flex-col items-center md:items-start">
      <h1 class="mb-1 font-serif font-bold tracking-tightest text-center md:text-left">
        <span id="typed-intro" class="block text-primary text-3xl sm:text-5xl md:text-6xl lg:text-7xl leading-tight min-h-[2.5em] m-0"></span>
        <span id="typed-name" class="block text-white text-4xl sm:text-6xl md:text-7xl lg:text-8xl leading-tight min-h-[2.5em] m-0"></span>
      </h1>
      <p class="mb-4 font-serif text-lg leading-[32px] font-semibold tracking-tighter text-primary sm:text-2xl md:text-3xl text-center md:text-left">
        {specialty}
      </p>
      <p class="mb-6 text-base font-normal text-neutral md:text-lg text-center md:text-left">
        {summary}
      </p>
      <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 w-full sm:w-auto justify-center md:justify-start">
        <a
          class="inline-block rounded-full bg-primary px-8 py-4 text-sm leading-5 font-medium text-[#fff] cursor-pointer text-center"
          href="#contact"
        >Get in Touch</a>
        <a
          class="inline-block rounded-full bg-white text-primary border border-primary px-8 py-4 text-sm leading-5 font-medium cursor-pointer text-center hover:bg-primary hover:text-white transition-colors duration-200"
          href="https://somaiya0-my.sharepoint.com/:b:/g/personal/rohit_sd_somaiya_edu/EcTycmheCOFDoUBHYXe8Et8BxUMp62ub4MhYDLCBxnxy8Q?e=s8o056" target="_blank" rel="noopener noreferrer"
        >View My Resume</a>
        <a
          class="inline-block rounded-full bg-black text-primary border border-primary px-8 py-4 text-sm leading-5 font-medium cursor-pointer text-center hover:bg-primary hover:text-white transition-colors duration-200"
          href="https://github.com/irohitdeshpande" target="_blank" rel="noopener noreferrer"
        >GitHub Profile</a>
      </div>
    </div>
    {/* Right: Picture */}
    <div class="flex-1 flex justify-center md:justify-end items-center">
      {/* Replace src with your image path */}
      <img src="/rohitdeshpande.jpg" alt="Rohit Deshpande" class="w-64 h-64 md:w-[28rem] md:h-[28rem] rounded-2xl object-cover shadow-lg bg-white/10" />
    </div>
  </div>
</section>

<script>
  const introText = "नमस्कार! मी";
  const nameTextMarathi = "\nरोहित देशपांडे";
  const nameTextEnglish = "\nROHIT DESHPANDE";
  
  let introIdx = 0;
  let nameIdx = 0;
  let isMarathi = true;
  const introElem = document.getElementById("typed-intro");
  const nameElem = document.getElementById("typed-name");
  // Reserve space for both lines even before typing
  if (introElem) introElem.innerHTML = "&nbsp;";
  if (nameElem) nameElem.innerHTML = "&nbsp;";

  function typeText() {
    if (introIdx < introText.length) {
      if (introElem) introElem.textContent += introText[introIdx++];
      setTimeout(typeText, 70);
    } else if (isMarathi && nameIdx < nameTextMarathi.length) {
      if (nameElem) {
        if (nameTextMarathi[nameIdx] === "\n") {
          nameElem.appendChild(document.createElement("br"));
        } else {
          nameElem.textContent += nameTextMarathi[nameIdx];
        }
      }
      nameIdx++;
      setTimeout(typeText, 70);
    } else if (isMarathi) {
      setTimeout(eraseName, 700);
    } else if (!isMarathi && nameIdx < nameTextEnglish.length) {
      if (nameElem) {
        if (nameTextEnglish[nameIdx] === "\n") {
          nameElem.appendChild(document.createElement("br"));
        } else {
          nameElem.textContent += nameTextEnglish[nameIdx];
        }
      }
      nameIdx++;
      setTimeout(typeText, 70);
    } else {
      setTimeout(resetAnimation, 700);
    }
  }

  function eraseName() {
    if (nameElem && (nameElem.textContent ?? "").length > 0) {
      nameElem.textContent = (nameElem.textContent ?? "").slice(0, -1);
      setTimeout(eraseName, 40);
    } else {
      nameIdx = 0;
      isMarathi = false;
      if (nameElem) nameElem.textContent = "";
      setTimeout(typeText, 200);
    }
  }

  function resetAnimation() {
    if (nameElem) nameElem.textContent = "";
    introIdx = 0;
    nameIdx = 0;
    isMarathi = true;
    if (introElem) introElem.textContent = "";
    setTimeout(typeText, 200);
  }

  // Start the animation
  if (introElem && nameElem) {
    typeText();
  }
</script>